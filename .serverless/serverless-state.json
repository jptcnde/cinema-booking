{
  "service": {
    "service": "cinema",
    "serviceObject": {
      "name": "cinema"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*?]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "environment": {
        "DYNAMODB_TABLE": "cinema-dev",
        "REACT_APP_API_ENDPOINT": "https://msiavx9v96.execute-api.us-east-1.amazonaws.com/dev/",
        "DB_TBL_TICKET": "ticket",
        "DB_TBL_CINEMA": "cinema",
        "DATE_TIME_FORMAT": "yyyy-MM-dd'T'HH:mm:ss",
        "MAIL_OPTIONS": "{\"from\":\"kulaskulapoo@gmail.com\",\"subject\":\"Bambu Cinema booking confirmation\"}",
        "MAIL_TRANSPORTER": "{\"service\":\"gmail\",\"auth\":{\"user\":\"kulaskulapoo@gmail.com\",\"pass\":\"jopetpogi00\"}}",
        "SITE_LINK": "http://localhost:3000"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:*"
          ],
          "Resource": "arn:aws:dynamodb:us-east-1:*:table/*"
        }
      ],
      "region": "us-east-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetTicketsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cinema-dev-getTickets"
            }
          },
          "BookTicketsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cinema-dev-bookTickets"
            }
          },
          "UnbookLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/cinema-dev-unbook"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "cinema",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cinema-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cinema-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "cinema",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetTicketsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cinema/dev/1576746424811-2019-12-19T09:07:04.811Z/cinema.zip"
              },
              "FunctionName": "cinema-dev-getTickets",
              "Handler": "server/lambda.getTickets",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "cinema-dev",
                  "REACT_APP_API_ENDPOINT": "https://msiavx9v96.execute-api.us-east-1.amazonaws.com/dev/",
                  "DB_TBL_TICKET": "ticket",
                  "DB_TBL_CINEMA": "cinema",
                  "DATE_TIME_FORMAT": "yyyy-MM-dd'T'HH:mm:ss",
                  "MAIL_OPTIONS": "{\"from\":\"kulaskulapoo@gmail.com\",\"subject\":\"Bambu Cinema booking confirmation\"}",
                  "MAIL_TRANSPORTER": "{\"service\":\"gmail\",\"auth\":{\"user\":\"kulaskulapoo@gmail.com\",\"pass\":\"jopetpogi00\"}}",
                  "SITE_LINK": "http://localhost:3000"
                }
              }
            },
            "DependsOn": [
              "GetTicketsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GetTicketsLambdaVersionJ3OBCcYI3yVQ7hVqOSsVK4gZErjzbGsGOpuzenC0": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTicketsLambdaFunction"
              },
              "CodeSha256": "Am4FzUNtiPPSVn7rTbilTyipYlxfNPlmsC1mwoylIjo="
            }
          },
          "BookTicketsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cinema/dev/1576746424811-2019-12-19T09:07:04.811Z/cinema.zip"
              },
              "FunctionName": "cinema-dev-bookTickets",
              "Handler": "server/lambda.bookTickets",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "cinema-dev",
                  "REACT_APP_API_ENDPOINT": "https://msiavx9v96.execute-api.us-east-1.amazonaws.com/dev/",
                  "DB_TBL_TICKET": "ticket",
                  "DB_TBL_CINEMA": "cinema",
                  "DATE_TIME_FORMAT": "yyyy-MM-dd'T'HH:mm:ss",
                  "MAIL_OPTIONS": "{\"from\":\"kulaskulapoo@gmail.com\",\"subject\":\"Bambu Cinema booking confirmation\"}",
                  "MAIL_TRANSPORTER": "{\"service\":\"gmail\",\"auth\":{\"user\":\"kulaskulapoo@gmail.com\",\"pass\":\"jopetpogi00\"}}",
                  "SITE_LINK": "http://localhost:3000"
                }
              }
            },
            "DependsOn": [
              "BookTicketsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "BookTicketsLambdaVersionzds0tL06g4kMC96L85eQGf5jbpdxxTOio5qxoP5iq7U": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "BookTicketsLambdaFunction"
              },
              "CodeSha256": "Am4FzUNtiPPSVn7rTbilTyipYlxfNPlmsC1mwoylIjo="
            }
          },
          "UnbookLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/cinema/dev/1576746424811-2019-12-19T09:07:04.811Z/cinema.zip"
              },
              "FunctionName": "cinema-dev-unbook",
              "Handler": "server/lambda.unbookTicket",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "cinema-dev",
                  "REACT_APP_API_ENDPOINT": "https://msiavx9v96.execute-api.us-east-1.amazonaws.com/dev/",
                  "DB_TBL_TICKET": "ticket",
                  "DB_TBL_CINEMA": "cinema",
                  "DATE_TIME_FORMAT": "yyyy-MM-dd'T'HH:mm:ss",
                  "MAIL_OPTIONS": "{\"from\":\"kulaskulapoo@gmail.com\",\"subject\":\"Bambu Cinema booking confirmation\"}",
                  "MAIL_TRANSPORTER": "{\"service\":\"gmail\",\"auth\":{\"user\":\"kulaskulapoo@gmail.com\",\"pass\":\"jopetpogi00\"}}",
                  "SITE_LINK": "http://localhost:3000"
                }
              }
            },
            "DependsOn": [
              "UnbookLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "UnbookLambdaVersionHKCMKskturjzpQp1UB1D0Fz7CHMdfnFAtzw49iKuoE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UnbookLambdaFunction"
              },
              "CodeSha256": "Am4FzUNtiPPSVn7rTbilTyipYlxfNPlmsC1mwoylIjo="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-cinema",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceTickets": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "tickets",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceUnbook": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "unbook",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodTicketsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTickets"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetTicketsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodTicketsPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceTickets"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "BookTicketsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodUnbookPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceUnbook"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UnbookLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1576746387624": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodTicketsGet",
              "ApiGatewayMethodTicketsPut",
              "ApiGatewayMethodUnbookPut"
            ]
          },
          "GetTicketsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTicketsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "BookTicketsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "BookTicketsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UnbookLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UnbookLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PatronDynamoDbTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "patron",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "CinemaDynamoDbTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "cinema",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "MovieDynamoDbTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "movie",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "TicketDynamoDbTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "BillingMode": "PAY_PER_REQUEST",
              "TableName": "ticket",
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "GetTicketsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTicketsLambdaVersionJ3OBCcYI3yVQ7hVqOSsVK4gZErjzbGsGOpuzenC0"
            }
          },
          "BookTicketsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "BookTicketsLambdaVersionzds0tL06g4kMC96L85eQGf5jbpdxxTOio5qxoP5iq7U"
            }
          },
          "UnbookLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UnbookLambdaVersionHKCMKskturjzpQp1UB1D0Fz7CHMdfnFAtzw49iKuoE"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-offline",
      "serverless-dotenv-plugin",
      "serverless-plugin-tables"
    ],
    "pluginsData": {},
    "functions": {
      "getTickets": {
        "handler": "server/lambda.getTickets",
        "events": [
          {
            "http": {
              "path": "tickets",
              "method": "get",
              "cors": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "cinema-dev-getTickets",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "bookTickets": {
        "handler": "server/lambda.bookTickets",
        "events": [
          {
            "http": {
              "path": "tickets",
              "method": "put",
              "cors": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "cinema-dev-bookTickets",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      },
      "unbook": {
        "handler": "server/lambda.unbookTicket",
        "events": [
          {
            "http": {
              "path": "unbook",
              "method": "put",
              "cors": false,
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "cinema-dev-unbook",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs8.10",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "PatronDynamoDbTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "patron",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "CinemaDynamoDbTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "cinema",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "MovieDynamoDbTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "movie",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "TicketDynamoDbTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "BillingMode": "PAY_PER_REQUEST",
            "TableName": "ticket",
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "serviceFilename": "serverless.yaml",
    "layers": {},
    "artifact": "/home/jpt/src/cinema-ticket-booking/.serverless/cinema.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/cinema/dev/1576746424811-2019-12-19T09:07:04.811Z",
    "artifact": "cinema.zip"
  }
}